// Mixins
@mixin black()
	font-weight: 900

@mixin bold()
	font-weight: 600

@mixin regular()
	font-weight: 400

@mixin light()
	font-weight: 300

// @include abs-pos(10px, 10px, 5px, 15px)
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto)
	bottom: $bottom
	left: $left
	position: absolute
	right: $right
	top: $top

// @include rel-pos(10px, 10px, 5px, 15px)
@mixin rel-pos ($top: auto, $right: auto, $bottom: auto, $left: auto)
	bottom: $bottom
	left: $left
	position: relative
	right: $right
	top: $top

// @include line-height(16)
@mixin line-height($heightValue: 14 )
	line-height: $heightValue + px //fallback for old browsers
	line-height: (0.125 * $heightValue) + rem

@mixin flexbox()
	display: flex
	justify-content: center
	align-items: center

@mixin flex-row()
	-webkit-flex-direction: row
	flex-direction: row
	-webkit-align-items: center
	align-items: center
	-webkit-justify-content: center
	justify-content: center

@mixin flex-column()
	-webkit-flex-direction: column
	flex-direction: column
	-webkit-align-items: center
	align-items: center
	-webkit-justify-content: center
	justify-content: center

@function parseInt($n)
	@return $n / ($n * 0 + 1)

@mixin rem($property, $values)
	$px: ()
	$rem: ()

	@each $value in $values
		@if $value == 0 or type-of($value) != "number"
			$px: append($px , $value)
			$rem: append($rem, $value)

		@else
			$unit: unit($value)
			$val: parseInt($value)

			@if $unit == "px"
				$px: append($px, $value)
				$rem: append($rem, ($val / 10 + rem))

			@if $unit == "rem"
				$px: append($px, ($val * 10 + px))
				$rem: append($rem, $value)

	@if $px == $rem
		#{$property}: $px
	@else
		#{$property}: $px
		#{$property}: $rem

@mixin size($width, $height)
	width: $width
	height: $height

@mixin square($size)
	@include size($size, $size)

// Placeholder text
@mixin placeholder($color: $input-color-placeholder)
	// Firefox
	&::-moz-placeholder
		color: $color
		opacity: 1 // Override Firefox's unusual default opacity see https://github.com/twbs/bootstrap/pull/11526

	&:-ms-input-placeholder
		color: $color // Internet Explorer 10+
	&::-webkit-input-placeholder
		color: $color // Safari and Chrome

// Animations
@mixin keyframes($animation-name)
    @-webkit-keyframes #{$animation-name}
        @content;

    @-moz-keyframes #{$animation-name}
        @content;

    @-ms-keyframes #{$animation-name}
        @content;

    @-o-keyframes #{$animation-name}
        @content;

    @keyframes #{$animation-name}
        @content;

@mixin animation-name($name...)
	-o-animation-name: $name
	-moz-animation-name: $name
	-ms-animation-name: $name
	-webkit-animation-name: $name
	animation-name: $name

@mixin animation-duration($duration...)
	-o-animation-duration: $duration
	-moz-animation-duration: $duration
	-ms-animation-duration: $duration
	-webkit-animation-duration: $duration
	animation-duration: $duration

@mixin animation-timing-function($timing...)
	-o-animation-timing-function: $timing
	-moz-animation-timing-function: $timing
	-ms-animation-timing-function: $timing
	-webkit-animation-timing-function: $timing
	animation-timing-function: $timing

@mixin animation-iteration-count($count...)
	-o-animation-iteration-count: $count
	-ms-animation-iteration-count: $count
	-moz-animation-iteration-count: $count
	-webkit-animation-iteration-count: $count
	animation-iteration-count: $count

@mixin animation-direction($direction...)
	-o-animation-direction: $direction
	-moz-animation-direction: $direction
	-ms-animation-direction: $direction
	-webkit-animation-direction: $direction
	animation-direction: $direction

@mixin animation-fill-mode($fill...)
	-o-animation-fill-mode: $fill
	-moz-animation-fill-mode: $fill
	-ms-animation-fill-mode: $fill
	-webkit-animation-fill-mode: $fill
	animation-fill-mode: $fill

@mixin animation-play-state($state...)
	-o-animation-play-state: $state
	-moz-animation-play-state: $state
	-ms-animation-play-state: $state
	-webkit-animation-play-state: $state
	animation-play-state: $state

@mixin animation($animation...)
	-o-animation: $animation
	-ms-animation: $animation
	-moz-animation: $animation
	-webkit-animation: $animation
	animation: $animation

@mixin transition-property($property...)
	-webkit-transition-property: $property
	-moz-transition-property: $property
	-o-transition-property: $property
	-ms-transition-property: $property
	transition-property: $property

@mixin transition-duration($duration...)
	-webkit-transition-duration: $duration
	-moz-transition-duration: $duration
	-o-transition-duration: $duration
	-ms-transition-duration: $duration
	transition-duration: $duration

@mixin transition-timing-function($timing...)
	-webkit-transition-timing-function: $timing
	-moz-transition-timing-function: $timing
	-o-transition-timing-function: $timing
	-ms-transition-timing-function: $timing
	transition-timing-function: $timing

@mixin transition($transition...)
	-webkit-transition: $transition
	-moz-transition: $transition
	-o-transition: $transition
	-ms-transition: $transition
	transition: $transition

@mixin transform($perspective, $translateZ)
	-webkit-transform: perspective($perspective) translateZ($translateZ)
	-moz-transform: perspective($perspective) translateZ($translateZ)
	-o-transform: perspective($perspective) translateZ($translateZ)
	-ms-transform: perspective($perspective) translateZ($translateZ)
	transform: perspective($perspective) translateZ($translateZ)

// Media queries
@mixin mobile
	@media (min-width: #{$mobile})
		@content

@mixin mobile-large
	@media (min-width: #{$mobile-large})
		@content

@mixin tablet-small
	@media (min-width: #{$tablet-small})
		@content

@mixin tablet
	@media (min-width: #{$tablet})
		@content

@mixin tablet-large
	@media (min-width: #{$tablet-large})
		@content

@mixin tablet-xlarge
	@media (min-width: #{$tablet-xlarge})
		@content

@mixin desktop
	@media (min-width: #{$desktop})
		@content

@mixin desktop-large
	@media (min-width: #{$desktop-large})
		@content

@mixin desktop-xlarge
	@media (min-width: #{$desktop-large} + 1)
		@content

@mixin desktop-xxlarge
	@media (min-width: #{$desktop-xlarge})
		@content
